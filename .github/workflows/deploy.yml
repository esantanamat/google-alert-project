name: Terraform Change Management Pipeline w Github Actions

on:
  push:
    branches:
      - main
    paths:
      - infrastructure/main/**
  pull_request:
    branches:
      - main

env:
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1

jobs:
  terraform:
    runs-on: ubuntu-latest
    name: "Terraform change management"
    defaults:
      run:
        shell: bash
        working-directory: ./infrastructure/main

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      

     
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0
      - name: Update Lambda function with new image
        env:
          AWS_REGION: us-east-1  
          LAMBDA_FUNCTION_NAME: reminder-api-lambda-function
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: google-lambda
          IMAGE_TAG: reminder-checker-latest
        run: |
          aws lambda update-function-code \
            --region $AWS_REGION \
            --function-name $LAMBDA_FUNCTION_NAME \
            --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Update second lambda function with new image
        env:
          AWS_REGION: us-east-1  
          LAMBDA_FUNCTION_NAME: google-api-lambda-function
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: google-lambda
          IMAGE_TAG: http-handler-latest
        run: |
          aws lambda update-function-code \
              --region $AWS_REGION \
              --function-name $LAMBDA_FUNCTION_NAME \
              --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      
      - name: Terraform Init
        id: init
        run: terraform init
    
     
      - name: Terraform Format
        id: fmt
        run: terraform fmt 

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
      