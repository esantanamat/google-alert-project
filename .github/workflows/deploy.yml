name: Terraform Change Management Pipeline w Github Actions

on:
  push:
    branches:
      - main
    paths:
      - infrastructure/**
  pull_request:
    branches:
      - main

env:
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    name: "Terraform change management"
    defaults:
      run:
        shell: bash
        working-directory: ./

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Zip lambda function
        run: zip lambda_function_payload.zip ./app/google-api-lambda-function.py
      - name: Upload Lambda zip to s3
        run: |
            aws s3 cp lambda_function_payload.zip s3://$BUCKET_TF_STATE/lambdas/google-api-lambda.zip
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply

      - name: Upload Frontend to S3 Static Site
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
            aws s3 sync ./frontend s3://$AWS_FRONTEND_BUCKET/ --delete --acl public-read


