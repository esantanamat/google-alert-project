name: Terraform Change Management Pipeline w Github Actions

on:
  push:
    branches:
      - main
    paths:
      - infrastructure/**
  pull_request:
    branches:
      - main

env:
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1

jobs:
  terraform:
    runs-on: ubuntu-latest
    name: "Terraform change management"
    defaults:
      run:
        shell: bash
        working-directory: ./infrastructure

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
     
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0
      - name: Ensure ECR repo exists
        run: |
            if ! aws ecr describe-repositories --repository-names google-lambda; then
                aws ecr create-repository --repository-name google-lambda
            else
                echo "ECR repo already exists, skipping creation."
            fi

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build and push docker image to ecr
        env: 
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: google-lambda
            IMAGE_TAG: latest
        run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ../app
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


      - name: Terraform Init
        id: init
        run: terraform init


      - name: Terraform Format
        id: fmt
        run: terraform fmt 
      - name: Terraform Format
        id: fmtcheck
        run: terraform fmt -check 

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true
      - name: Import ECR repo
        run: |
          terraform import aws_ecr_repository.lambda google-lambda

      

      - name: Terraform apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
      