name: Destroy Infrastructure

on:
  workflow_dispatch:
env:
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1

defaults:
  run:
    working-directory: ./infrastructure/main

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        
      - name: Empty ECR repository
        env:
          AWS_REGION: us-east-1
          ECR_REPO: google-lambda
        run: |
          image_digests=$(aws ecr list-images \
            --region $AWS_REGION \
            --repository-name $ECR_REPO \
            --query 'imageIds[*].imageDigest' \
            --output text)

         
          if [ -z "$image_digests" ]; then
            echo "No images to delete."
            exit 0
          fi

          
          delete_json=$(for digest in $image_digests; do
            echo -n "{\"imageDigest\":\"$digest\"},"
          done | sed 's/,$//') # remove trailing comma

         
          aws ecr batch-delete-image \
            --region $AWS_REGION \
            --repository-name $ECR_REPO \
            --image-ids "[$delete_json]"
      - name: Empty S3 Bucket
        env: 
          AWS_REGION: us-east-1
        run: |
          if ! aws s3 ls s3://enmanuel-s-test-bucket-125 2>/dev/null; then
            echo "Bucket does not exist, skipping delete."
          else
            echo "Bucket is created, now deleting all contents..."
            aws s3 rm s3://enmanuel-s-test-bucket-125 --recursive
          fi
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
      